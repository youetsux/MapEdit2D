#include "Stage.h"

namespace
{
	const int IMAGE_SIZE = { 32 }; // ‰æ‘œ‚ÌƒTƒCƒY
	const int MAP_WIDTH = { 32 };
	const int MAP_HEIGHT = { 22 };
	const int MAP_CHIP_WIDTH = { 16 };
	const int MAP_CHIP_HEIGHT = { 12 };
	const int myMap[MAP_HEIGHT][MAP_WIDTH]
	{
		{102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102},
		{102,0,33,33,0,0,0,0,0,0,0,0,109,109,109,109,109,109,109,109,109,0,0,0,0,0,0,0,0,0,0,102},
		{102,0,20,21,33,0,0,0,0,0,0,0,109,109,109,109,109,109,109,109,109,0,0,0,0,0,0,0,0,0,0,102},
		{102,0,36,37,0,33,33,0,0,0,0,0,0,0,109,109,109,109,109,109,0,0,0,0,0,0,0,0,0,0,0,102},
		{102,0,0,0,2,0,33,33,0,0,0,0,2,0,109,109,109,109,109,109,0,0,0,0,0,20,21,0,0,0,0,102},
		{102,0,0,0,0,0,0,33,33,0,0,0,0,0,0,109,109,109,109,0,0,0,0,0,0,36,37,0,0,0,0,102},
		{102,0,0,0,0,0,0,0,0,33,33,0,0,0,0,0,109,109,0,0,0,0,0,0,0,0,0,0,0,0,0,102},
		{102,0,0,102,102,102,102,0,102,102,102,0,0,0,0,0,0,0,0,0,102,0,0,0,0,0,0,0,0,157,0,102},
		{102,0,0,102,102,102,102,102,102,0,102,102,33,0,0,0,0,0,102,102,102,0,0,0,0,0,0,0,157,157,157,102},
		{102,0,0,0,0,102,102,0,0,0,0,0,0,33,2,0,0,0,102,102,0,0,0,0,0,0,0,157,157,157,157,102},
		{102,0,0,0,0,0,102,0,0,0,0,0,33,33,33,33,0,0,0,102,0,0,0,0,0,0,157,157,105,105,157,102},
		{102,0,0,0,0,0,102,0,0,0,0,0,0,0,0,33,33,0,0,102,0,0,0,0,0,0,157,105,105,105,157,102},
		{102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,33,0,102,33,33,33,2,2,157,157,105,105,105,157,102},
		{102,0,0,0,0,0,0,0,0,0,0,0,20,21,0,0,0,33,33,102,0,0,0,2,33,157,105,105,105,105,157,102},
		{102,0,0,0,2,0,0,2,0,0,0,0,36,37,0,0,0,0,33,102,0,0,0,0,0,157,105,105,105,105,157,102},
		{102,0,0,0,0,0,55,55,55,0,33,33,33,33,0,0,0,2,33,33,102,102,0,0,0,157,157,105,105,105,157,102},
		{102,0,0,0,20,21,55,57,55,55,0,0,0,33,33,33,33,33,33,0,102,0,0,0,0,0,157,157,157,157,157,102},
		{102,0,55,55,36,37,57,57,57,55,55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,157,20,21,0,102},
		{102,0,55,57,57,57,57,57,57,57,55,55,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,36,37,0,102},
		{102,55,55,55,57,60,153,153,60,57,55,55,0,102,102,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,102},
		{102,55,57,57,57,57,57,57,57,57,57,102,102,102,102,102,102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,102},
		{102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102}
	};
	//{
	//	{   0,  1,  2,  3,  4,  5,  6,  7,  8,  9 },
	//	{  10, 11, 12, 13, 14, 15, 16, 17, 18, 19 },
	//	{  20, 21, 22, 23, 24, 25, 26, 27, 28, 29 },
	//	{  30, 31, 32, 33, 34, 35, 36, 37, 38, 39 },
	//	{  40, 41, 42, 43, 44, 45, 46, 47, 48, 49 },
	//	{  50, 51, 52, 53, 54, 55, 56, 57, 58, 59 },
	//	{  60, 61, 62, 63, 64, 65, 66, 67, 68, 69 },
	//	{  70, 71, 72, 73, 74, 75, 76, 77, 78, 79 },
	//	{  80, 81, 82, 83, 84, 85, 86, 87, 88, 89 },
	//	{  90, 91, 92, 93, 94, 95, 96, 97, 98, 99 }
	//};
}

Stage::Stage()
	: GameObject()
{
	bgHandle = std::vector<int>(MAP_HEIGHT * MAP_WIDTH, -1);
	//bgHandle = LoadGraph("./bg.png");
	LoadDivGraph("./bg.png", MAP_CHIP_WIDTH * MAP_CHIP_HEIGHT, MAP_CHIP_WIDTH, MAP_CHIP_HEIGHT,
		IMAGE_SIZE, IMAGE_SIZE, bgHandle.data());
}

Stage::~Stage()
{
	for (int i = 0; i < bgHandle.size(); i++) {
		if (bgHandle[i] != -1) {
			DeleteGraph(bgHandle[i]);
			bgHandle[i] = -1;
		}
	}
	//if (bgHandle != -1) {
	//	DeleteGraph(bgHandle);
	//	bgHandle = -1;
	//}
}

void Stage::Update()
{

}

void Stage::Draw()
{

	for (int j = 0; j < MAP_HEIGHT; j++) {
		for (int i = 0; i < MAP_WIDTH; i++) {
			//int kx = myMap[j][i] % MAP_CHIP_WIDTH; // 0,1,2,3
			//int ky = myMap[j][i] / MAP_CHIP_WIDTH; // 0,1,2,3
			if (bgHandle[myMap[j][i]] != -1) {
				DrawGraph(i * IMAGE_SIZE, j * IMAGE_SIZE, bgHandle[myMap[j][i]], TRUE);
			}
		}
		//DrawGraph(0, 0, bgHandle, TRUE);
	}
}
